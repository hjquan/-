<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport"
        content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title>Document</title>
    <link rel="stylesheet" href="../../../../commonUi/aui/css/aui.css">
    <link rel="stylesheet" type="text/css" href="../../../../css/addlog.css" />
    <style>
        .noData {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 70vh;
        }

        .noData img {
            width: 100px;
            height: 100px;
        }


        .line_after_1:after {
            width: 100%;
            height: 1px;
            content: '';
            display: block;
            position: absolute;
            bottom: 0;
            left: 50%;
            background-color: #eee;
            transform: translate(-50%, -50%) scaleY(.5);
        }

        .list_item {

            font-size: 15px;
            font-family: PingFang SC;
            font-weight: 500;
            color: rgba(51, 51, 51, 1);

            position: relative;
            background-color: #fff;
            margin-top: 1px;
        }

        .title {
            padding: 0 15px;
            height: 40px;
            background: rgba(5, 143, 253, 0.2);
            font-size: 13px;
            line-height: 40px;
            font-weight: 500;
            color: rgba(51, 51, 51, 1);

        }

        textarea {
            padding: 15px;
            font-size: 12px;
            min-height: 90px;
            line-height: 20px;
            font-family: PingFang SC;
            font-weight: 500;
            color: rgba(51, 51, 51, 1);
        }

        .img_box {
            border-top: 1px dashed #ccc;
            padding: 15px;
            display: flex;
            justify-content: flex-start;
            align-items: center;
        }

        .img_item {
            margin-right: 5px;
            width: 50px;
            height: 50px;
        }

        .add_btn {
            width: 50px;
            height: 50px;
            border-radius: 3px;
            border: 1px solid #ccc;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #fff;
        }

        .add_btn i {
            font-size: 24px;
        }

        .requid {
            color: #EC4031;
            font-size: 0.8rem;

        }

        .btn {
            width: 80%;
            height: 46px;
            line-height: 46px;
            background: rgba(5, 143, 253, 1);
            border-radius: 5px;
            text-align: center;
            color: #fff;
            margin: 45px auto 0;
        }

        .border_bottom_after:after {
            background-color: #fff;
        }
    </style>
</head>

<body>
    <div class="aui-content aui-margin-b-15" id="app">
        <ul class="list">
            <li class="list_item">
                <h2 class="title">原因<span class="requid">*</span></h2>
                <textarea name="name" rows="8" cols="80" placeholder="请输入文字" v-model="callContent"></textarea>
                <div class="img_box">
                    <div class="imgUpdate border_bottom_after" style="padding:10px 15px;">
                        <div class="imgItem" v-for="(item,index) in imgSrcResult" tapmode="hover">
                            <i class="aui-iconfont aui-icon-close del_close" v-if="isCloseBtnResult"
                                @click=removeImageResult(index) tapmode="hover"></i>
                            <img :src="item" alt="" tapmode @click="imgSeeResult(imgSrcResult,index)">
                        </div>
                        <div class="add_btn" style="background-color: #fff;" @click="uploadHeadPicResult()" tapmode
                            v-if="imgSrcResult.length < 3"> <i class="aui-iconfont aui-icon-camera"></i></div>
                    </div>
                </div>
            </li>
            <li class="list_item">
                <h2 class="title">处理<span class="requid">*</span></h2>
                <textarea name="name" rows="8" cols="80" placeholder="请输入文字" v-model="resultContent"></textarea>
                <div class="img_box">
                    <div class="imgUpdate border_bottom_after" style="padding:10px 15px;">
                        <div class="imgItem" v-for="(item,index) in imgSrc" tapmode="hover">
                            <i class="aui-iconfont aui-icon-close del_close" v-if="isCloseBtn" @click=removeImage(index)
                                tapmode="hover"></i>
                            <img :src="item" alt="" tapmode @click="imgSee(imgSrc,index)">
                        </div>
                        <div class="add_btn" style="background-color: #fff;" @click="uploadHeadPic()" tapmode
                            v-if="imgSrc.length < 3"><i class="aui-iconfont aui-icon-camera"></i></div>
                    </div>
                </div>
            </li>
        </ul>
        <div class="btn" @click="submitFn()">完成</div>
    </div>
    <script src="../../../../script/api.js"></script>
    <script src="../../../../script/sha1.js"></script>
    <script src="../../../../script/common.js"></script>
    <script src="../../../../script/vue.js"></script>
    <script src="../../../../script/layimg.js"></script>
    <script>
        Vue.use(VueLazyload, {
            error: '../../../../image/err.jpg',
            loading: '../../../../image/lay_img.gif'
        });

        apiready = function () {
            var UIAlbumBrowser = api.require('UIAlbumBrowser');
            var vm = new Vue({
                el: '#app',
                data: {
                    callpoliceInfo: api.pageParam.callpoliceInfo,
                    //结果图片图片字段
                    isCloseBtnResult: true,//是否显示删除图片icon
                    imgSrcResult: [],
                    serverImgResult: "",//服务器返回图片地址
                    srcImgUrlResult: "",//原图片地址（多张逗号分隔）
                    compressImgUrlResult: "",//压缩图片地址（多张逗号分隔）
                    //上传图片字段
                    isCloseBtn: true,//是否显示删除图片icon
                    imgSrc: [],
                    serverImg: "",//服务器返回图片地址
                    lableUrl: "",//标注图片地址(更改：该字段已清除)
                    srcImgUrl: "",//原图片地址（多张逗号分隔）
                    compressImgUrl: "",//压缩图片地址（多张逗号分隔）
                    callContent: "",//报警原因
                    resultContent: "",//处理结果
                },
                created: function () {

                },
                methods: {
                    //添加报警处理
                    addtower: function (callPhoto, resultPhoto) {
                        var that = this;
                        var prame = {
                            id: this.callpoliceInfo.id + "",
                            alarmReason: $api.getStorage('userId'),
                            callContent: that.callContent,
                            dealResult: that.resultContent,
                            reasonPhoto: this.serverImg,
                            resultPhoto: this.serverImgResult,
                        };
                        console.log("获取项目信息详情:" + JSON.stringify(prame));
                        $app.post(
                            true,
                            updateAlarmHandleInfoURL,
                            prame,
                            function (ret) {
                                api.sendEvent({
                                    name: 'updateAlarmHandleInfoURL'
                                });
                                api.closeWin();
                            }
                        )
                    },
                    //提交数据
                    submitFn: function () {
                        var that = this;
                        if (!this.imgSrcResult.length) {
                            api.toast({
                                msg: "图片必传",
                                duration: 2000,
                                location: 'bottom'
                            });
                            return false;
                        }
                        if (!this.callContent || !this.resultContent) {
                            api.toast({
                                msg: "带 '*' 为必填项",
                                duration: 2000,
                                location: 'bottom'
                            });
                            return false;
                        }
                        //上传服务器
                        this.saveImg();
                    },

                    //处理结果图片处理函数start
                    // //图片查看
                    imgSeeResult: function (url, index) {
                        var photoBrowser = api.require('photoBrowser');
                        photoBrowser.open({
                            images: url,
                            activeIndex: index,
                            // placeholderImg: 'widget://res/img/apicloud.png',
                            bgColor: '#000'
                        }, function (ret, err) {
                            if (ret) {
                                if (ret.eventType === 'click') {
                                    photoBrowser.close();
                                }
                            } else { }
                        });
                    },

                    //删除图片
                    removeImageResult: function (index) {
                        this.imgSrcResult.splice(index, 1)
                    },
                    //图片上传服务器保存
                    saveImgResult: function (callPhoto) {
                        var compressImg = [];
                        var that = this;
                        if (that.imgSrcResult.length) {
                            var imageFilter = api.require('imageFilter');
                            for (var i = 0; i < that.imgSrcResult.length; i++) {
                                (function (index) {
                                    var imageName = randomWord(false, 9, 12);
                                    var imageCachePath = api.cacheDir;
                                    imageFilter.compress({
                                        img: that.imgSrcResult[index],
                                        quality: 0.3,
                                        save: {
                                            album: true, //(可选项)布尔值，是否保存到系统相册，默认false
                                            imgPath: imageCachePath,
                                            imgName: imageName + '.jpg'
                                        }
                                    }, function (ret, err) {
                                        if (ret) {
                                            var txt = imageCachePath + '/' + imageName + '.jpg';
                                            compressImg.push(txt)
                                        } else {

                                        }
                                    });
                                })(i);
                            }
                            console.log("compressImg:" + JSON.stringify(compressImg));
                            var timer = setInterval(function () {
                                if (compressImg.length) {
                                    clearInterval(timer)
                                    ajaxFile(
                                        true,
                                        '图片上传中...',
                                        uplodeURL, {}, {
                                        files: compressImg
                                    },
                                        function (ret) {
                                            console.log("数据img：" + JSON.stringify(ret));
                                            that.isCloseBtnResult = false;
                                            that.serverImgResult = '';
                                            ret.obj.map(function (item) {
                                                that.serverImgResult += item.fileName + ','
                                            });
                                            that.serverImgResult = that.serverImgResult.substr(0, that.serverImgResult.length - 1);
                                            console.log("数据img：" + JSON.stringify(that.serverImgResult));
                                            // that.addtower(callPhoto, that.serverImgResult);
                                            that.addtower();
                                        }
                                    )
                                }
                            }, 1000)
                        }
                    },

                    // // 图片选择
                    uploadHeadPicResult: function () {
                        // confirmPer('camera,photos', function () { })
                        var i = 0;
                        var imgarr = [];
                        var that = this;
                        UIAlbumBrowser_imagePicker();
                        //打开图片选择器
                        function UIAlbumBrowser_imagePicker() {
                            UIAlbumBrowser.imagePicker({
                                max: 3 - that.imgSrcResult.length,
                                styles: {
                                    bg: '#000000',
                                    //cameraImg: 'widget://res/cameraImg.png',
                                    mark: {
                                        position: 'top_right',
                                        size: 20
                                    },
                                    nav: {
                                        bg: '#000000',
                                        cancelColor: '#fff',
                                        cancelSize: 16,
                                        nextStepColor: '#7fff00',
                                        nextStepSize: 16
                                    },
                                    thumbnail: { //（可选项）返回的缩略图配置，**建议本图片不要设置过大** 若已有缩略图，则使用已有的缩略图。若要重新生成缩略图，可先调用清除缓存接口api.clearCache()。
                                        w: 52, //（可选项）数字类型；返回的缩略图的宽；默认：原图的宽度
                                        h: 52 //（可选项）数字类型；返回的缩略图的宽；默认：原图的高度
                                    }
                                },
                                animation: true,
                            }, function (ret) {
                                if (ret.eventType == 'nextStep') {
                                    if (ret.list && ret.list.length > 0) {
                                        imgarr = ret.list;
                                        UIAlbumBrowser_transPath();
                                    }
                                    UIAlbumBrowser.closePicker();
                                }
                                if (ret.originalPath && ret.originalPath.length > 0) {
                                    that.imgSrcResult.push(ret.originalPath)
                                }
                            });
                        }

                        function UIAlbumBrowser_transPath() {
                            UIAlbumBrowser.transPath({
                                path: imgarr[i].path
                            }, function (ret, err) {
                                if (ret) {
                                    i++;
                                    if (i < imgarr.length) {
                                        UIAlbumBrowser_transPath();
                                    } else {
                                        i = 0;
                                    }
                                    vm.imgSrcResult.push(ret.path)
                                } else {
                                }
                            });
                        }
                    },
                    //上传图片
                    //上传图片处理函数start
                    // //图片查看
                    imgSee: function (url, index) {
                        var photoBrowser = api.require('photoBrowser');
                        photoBrowser.open({
                            images: url,
                            activeIndex: index,
                            // placeholderImg: 'widget://res/img/apicloud.png',
                            bgColor: '#000'
                        }, function (ret, err) {
                            if (ret) {
                                if (ret.eventType === 'click') {
                                    photoBrowser.close();
                                }
                            } else { }
                        });
                    },

                    //删除图片
                    removeImage: function (index) {
                        this.imgSrc.splice(index, 1)
                    },
                    //图片上传服务器保存
                    saveImg: function () {
                        var compressImg = [];
                        var that = this;
                        if (that.imgSrc.length) {
                            var imageFilter = api.require('imageFilter');
                            for (var i = 0; i < that.imgSrc.length; i++) {
                                (function (index) {
                                    var imageName = randomWord(false, 9, 12);
                                    var imageCachePath = api.cacheDir;
                                    imageFilter.compress({
                                        img: that.imgSrc[index],
                                        quality: 0.3,
                                        save: {
                                            album: true, //(可选项)布尔值，是否保存到系统相册，默认false
                                            imgPath: imageCachePath,
                                            imgName: imageName + '.jpg'
                                        }
                                    }, function (ret, err) {
                                        if (ret) {
                                            var txt = imageCachePath + '/' + imageName + '.jpg';
                                            compressImg.push(txt)
                                        }
                                    });
                                })(i);
                            }

                            var timer = setInterval(function () {
                                console.log("compressImg:" + JSON.stringify(compressImg));
                                if (compressImg.length) {
                                    clearInterval(timer)
                                    ajaxFile(
                                        true,
                                        '图片上传中...',
                                        uplodeURL, {}, {
                                        files: compressImg
                                    },
                                        function (ret) {
                                            console.log('上传图片：' + JSON.stringify(ret));
                                            that.isCloseBtn = false;
                                            that.serverImg = '';
                                            ret.obj.map(function (item) {
                                                that.serverImg += item.fileName + ','
                                            });
                                            that.serverImg = that.serverImg.substr(0, that.serverImg.length - 1);
                                            // that.saveImgResult(that.serverImg);
                                            that.saveImgResult();
                                        }
                                    )
                                }
                            }, 1000)
                        }
                    },
                    // // 图片选择
                    uploadHeadPic: function () {
                        // confirmPer('camera,photos', function () { })
                        var i = 0;
                        var imgarr = [];
                        var that = this;
                        UIAlbumBrowser_imagePicker();
                        //打开图片选择器
                        function UIAlbumBrowser_imagePicker() {
                            UIAlbumBrowser.imagePicker({
                                max: 3 - that.imgSrc.length,
                                styles: {
                                    bg: '#000000',
                                    //cameraImg: 'widget://res/cameraImg.png',
                                    mark: {
                                        position: 'top_right',
                                        size: 20
                                    },
                                    nav: {
                                        bg: '#000000',
                                        cancelColor: '#fff',
                                        cancelSize: 16,
                                        nextStepColor: '#7fff00',
                                        nextStepSize: 16
                                    },
                                    thumbnail: { //（可选项）返回的缩略图配置，**建议本图片不要设置过大** 若已有缩略图，则使用已有的缩略图。若要重新生成缩略图，可先调用清除缓存接口api.clearCache()。
                                        w: 52, //（可选项）数字类型；返回的缩略图的宽；默认：原图的宽度
                                        h: 52 //（可选项）数字类型；返回的缩略图的宽；默认：原图的高度
                                    }
                                },
                                animation: true,
                            }, function (ret) {
                                if (ret.eventType == 'nextStep') {
                                    if (ret.list && ret.list.length > 0) {
                                        imgarr = ret.list;
                                        UIAlbumBrowser_transPath();
                                    }
                                    UIAlbumBrowser.closePicker();
                                }
                                if (ret.originalPath && ret.originalPath.length > 0) {
                                    that.imgSrc.push(ret.originalPath)
                                }
                            });
                        }

                        function UIAlbumBrowser_transPath() {
                            UIAlbumBrowser.transPath({
                                path: imgarr[i].path
                            }, function (ret, err) {
                                if (ret) {
                                    i++;
                                    if (i < imgarr.length) {
                                        UIAlbumBrowser_transPath();
                                    } else {
                                        i = 0;
                                    }
                                    vm.imgSrc.push(ret.path)
                                } else {
                                }
                            });
                        }
                    },
                }
            })
        }
    </script>
</body>

</html>