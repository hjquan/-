<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title></title>
    <!-- <link rel="stylesheet" type="text/css" href="../css/api.css"/> -->
    <!-- <link rel="stylesheet" type="text/css" href="../css/style.css"/> -->
    <link rel="stylesheet" href="../../../commonUi/aui/css/aui.css">
    <link rel="stylesheet" href="../../../commonUi/H5TimeSelector/libs/iosselect.css">
    <style>
        html,
        body {
            height: 100%;
            /*background: linear-gradient(0deg, rgba(255, 255, 255, 1), rgba(5, 143, 253, 1));*/
        }

        .line_after_1:after {
            width: 100%;
            height: 1px;
            content: '';
            display: block;
            position: absolute;
            bottom: 0;
            left: 50%;
            background-color: #eee;
            transform: translate(-50%, -50%);
        }

        .content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            margin-top: 10px;
            padding: 15px;
        }

        .timeBox {
            width: 115px;
            height: 25px;
            line-height: 25px;
            background: rgba(238, 238, 238, 1);
            border-radius: 3px;
            font-size: 12px;
            text-align: center;
            color: rgba(0, 0, 0, 1);
            margin-bottom: 18px;
        }

        .list_box {
            width: 100%;
        }

        .list_item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: 50px;
            position: relative;
        }

        .lf {
            flex: 1;
            font-size: 15px;
            font-family: PingFang SC;
            font-weight: 500;
            color: rgba(51, 51, 51, 1);
            line-height: 15px;
            /*text-align: center;*/
        }

        .lf p {
            color: rgba(51, 51, 51, 1);
            line-height: 15px;
            /*text-align: center;*/
            line-height: 20px;
        }

        .lf p:last-child {
            font-size: 12px;
        }

        .rt {
            flex: 3;
            display: flex;
            /*justify-content: space-around;*/
            align-items: center;
            font-size: 12px;
            color: rgba(51, 51, 51, 1);
        }
        .rt p{
            flex: 1;
        }
        .line{
            width: 100%;
            position: relative;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }
        .rt p,
        .rt span {
            font-size: 12px;
            color: rgba(51, 51, 51, 1);
        }
        .noData {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 200px;
        }

        .noData img {
            width: 100px;
            height: 100px;
        }
    </style>
</head>

<body>
    <div class="container" id="app">
        <div class="content">
            <div class="timeBox sj" tapmode @click="openTimeFn()">
                <span v-text="queryDate">2020-05-25</span>
                <i class="aui-iconfont aui-icon-down"></i>
            </div>
            <div class="line line_after_1">
                <canvas id="canvas" width="126" height="126"></canvas>
            </div>
            <ul class="list_box" v-if="recordListinfo.records && recordListinfo.records.length">
                <li class="list_item line_after_1" v-for="item in recordListinfo.records" >
                    <div class="lf">
                        <p v-text="item.personName || item.groupName">包样</p>
                        <p v-if="item.isleader === '0'">(班主长)</p>
                    </div>
                    <div class="rt">
                        <p>上班打卡: <span v-text="item.startDate">07:33:50</span></p>
                        <p>下班打卡: <span v-text="item.endDate">07:33:50</span></p>
                    </div>
                </li>

            </ul>
            <div class="noData" v-else>
                <img src="../../../image/noData.png" alt="">
                <p>没有相关数据~</p>
            </div>

        </div>




    </div>
    <script src="../../../script/api.js"></script>
    <script src="../../../script/sha1.js"></script>
    <script src="../../../commonUi/H5TimeSelector/libs/iosselect.js"></script>
    <script src="../../../commonUi/H5TimeSelector/timeselector.js"></script>
    <script src="../../../script/common.js"></script>
    <script src="../../../script/permission.js"></script>
    <script src="../../../script/vue.js"></script>



    <script>
        apiready = function() {
            $api.fixStatusBar($api.dom('header'));

            var vm = new Vue({
                el: '#app',
                data: {
                    pageParmas_txt:'',//接收参数
                    recordListinfo:'',//打卡详情
                    queryDate:'',//过闸时间
                    pageNo:1,//当前页吗

                },
                created: function() {
                    this.pageParmas_txt = api.pageParam.personalclockinrecord;
                    this.queryDate = $app.formDate(this.pageParmas_txt.queryDate, '-');
                    this.getdetailsFn()
                    console.log(api.pageParam.category);
                },
                mounted: function() {

                },
                watch: {


                },
                computed: {


                },
                methods: {
                    //时间选择
                    openTimeFn:function(){
                        var _this = this;
                        $app.timeFn(
                            function(ret){
                                _this.queryDate = ret;
                                _this.getdetailsFn()
                            },false
                            ,_this.queryDate
                        )
                    },
                    //获取日报表岗位下打卡信息
                    //获取日报表记录班主下打卡信息
                    getdetailsFn:function(){
                        var _this = this;
                        var params,url;
                        if(api.pageParam.category == '2'){
                            params = {
                                groupId:this.pageParmas_txt.groupId,
                                queryDate:this.queryDate
                            }
                            url = getGroupRecordInfo;
                        }else{
                            params = {
                                projectId:$api.getStorage('enterpriseId'),// 项目ID
                                station:this.pageParmas_txt.station,//项目岗位
                                category:api.pageParam.category ,//人员类别
                                queryDate:this.queryDate
                            }
                            url = getStationRecordInfo;
                        }
                        console.log($api.jsonToStr(params));
                        $app.post(
                            true,
                            url,
                            params,
                            function(ret){
                                console.log($api.jsonToStr(ret.obj));
                                _this.recordListinfo = ret.obj;
                                _this.recordListinfo.records = ret.obj.records.map(function(item){
                                    // _this.fillDate(ret.date.getMinutes())+':'+  _this.fillDate(ret.date.getSeconds())
                                    var currStartDate = new Date(parseInt(item.startDate));
                                    var currEndDate = new Date(parseInt(item.endDate));
                                    if(item.startDate){
                                        item.startDate = $app.fillDate(currStartDate.getMinutes()) + ':'+ $app.fillDate(currStartDate.getMinutes()) + ':' + $app.fillDate(currStartDate.getSeconds());
                                    }else{
                                        item.startDate = '暂无'
                                    }
                                    if(item.endDate){
                                        item.endDate =  $app.fillDate(currEndDate.getMinutes()) + ':'+ $app.fillDate(currEndDate.getMinutes()) + ':' + $app.fillDate(currEndDate.getSeconds());;
                                    }else{
                                        item.endDate = '暂无';
                                    }


                                    return item;
                                })
                                _this.$nextTick(function(){
                                    _this.initCanvas(ret.obj)
                                })

                            }
                        )
                    },
                    //环形进度条
                    initCanvas: function(data) {

                        var that = this;
                        var canvas = document.getElementById('canvas'), //获取canvas元素
                            context = canvas.getContext('2d'), //获取画图环境，指明为2d
                            centerX = canvas.width / 2, //Canvas中心点x轴坐标
                            centerY = canvas.height / 2, //Canvas中心点y轴坐标
                            rad = Math.PI * 2 / 100, //将360度分成100份，那么每一份就是rad度
                            speed = 0.2; //加载的快慢就靠它了
                        //绘制10像素宽的运动外圈
                        function f5_Circle() {
                            context.save();
                            context.strokeStyle = "#f5f5f5"; //设置描边样式
                            context.lineWidth = 10; //设置线宽
                            context.beginPath(); //路径开始
                            context.arc(centerX, centerY, 50, -Math.PI / 2, 100 * rad, false); //用于绘制圆弧context.arc(x坐标，y坐标，半径，起始角度，终止角度，顺时针/逆时针)
                            context.stroke(); //绘制
                            context.closePath(); //路径结束
                            context.restore();
                        }
                        //绘制10像素宽的运动外圈
                        function blueCircle(n) {
                            context.save();
                            context.strokeStyle = "#058FFD"; //设置描边样式
                            context.lineWidth = 10; //设置线宽
                            context.beginPath(); //路径开始
                            context.arc(centerX, centerY, 50, -Math.PI / 2, -Math.PI / 2 + n * rad, false); //用于绘制圆弧context.arc(x坐标，y坐标，半径，起始角度，终止角度，顺时针/逆时针)
                            context.stroke(); //绘制
                            context.closePath(); //路径结束
                            context.restore();
                        }
                        //绘制白色外圈
                        function whiteCircle() {
                            context.save();
                            context.beginPath();
                            context.lineWidth = 2; //设置线宽
                            context.fillStyle = "#f0f0f0";
                            context.arc(centerX, centerY, 100, 0, Math.PI * 2, false);
                            context.stroke();
                            context.closePath();
                            context.restore();
                        }
                        //百分比文字绘制
                        function text(n) {
                            context.save(); //save和restore可以保证样式属性只运用于该段canvas元素
                            context.strokeStyle = "#000"; //设置描边样式
                            context.font = "normal normal normal 14px arial";
                            //绘制字体，并且指定位置
                            context.strokeText('打卡', centerX - 15, centerY - 10);
                            context.stroke(); //执行绘制
                            context.restore();

                            context.strokeStyle = "#f00"; //设置描边样式
                            context.font = "normal normal normal 10px arial";
                            //绘制字体，并且指定位置
                            context.strokeText((data.actual) + '/' + (data.total), centerX - 10, centerY + 10);
                            context.stroke(); //执行绘制
                        }
                        //动画循环
                        (function drawFrame() {
                            var rafId = window.requestAnimationFrame(drawFrame);
                            context.clearRect(0, 0, canvas.width, canvas.height);
                            f5_Circle();
                            whiteCircle();
                            text(speed);
                            blueCircle(speed);
                            var num = parseInt(data.actual / data.total*100);
                            if (data.total === 0 || speed >= num) {
                                data.total === 0 ? num = 0 : num;
                                speed = num;
                                cancelAnimationFrame(rafId)
                            }
                            speed += 1;
                        }());
                    }
                }



            })
        }
    </script>

</html>
